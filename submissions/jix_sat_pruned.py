from strats import Hard, Expr, Alice, Bob, Charlie, Dan, Math, Phys, Phil, Engg

people = {"A": Alice, "B": Bob, "C": Charlie, "D": Dan}
fields = {"Math": Math, "Phys": Phys, "Phil": Phil, "Engg": Engg}


rules = {
    (): 'A: (U study Phys) xor ((not (D study Math) and not (B study Phys) and not (C study Phil) and not ("Phys: 1?" is Bar) and ("Phil: 1?" is Baz)) or ((C study Phys) and not (D study Phil) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (D study Engg) and not (D study Phil) and not ("Phys: 1?" is Foo) and ("Phil: 1?" is Baz)) or (not (D study Math) and not (B study Engg) and not (D study Phil) and ("Math: 1?" is Bar) and ("Phil: 1?" is Baz)) or (not (A study Phys) and not (D study Phys) and not (C study Engg) and not (B study Phil) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Baz)) or ((A study Phys) and not (D study Engg) and not (B study Phil) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (C study Phys) and not (D study Engg) and not (B study Phil) and not ("Phys: 1?" is Foo) and not ("Math: 1?" is Baz)) or (not (B study Phys) and not (C study Phys) and not (B study Engg) and not (D study Phil) and not ("Phys: 1?" is Foo) and not ("Math: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (A study Math) and not (A study Phys)))?',
    ('Foo',): 'D: (U study Phys) xor not ((not (D study Math) and not (A study Engg) and not (B study Engg) and not (D study Engg) and not (D study Phil) and not ("Math: 1?" is Baz)) or (not (D study Math) and not (D study Phys) and not (A study Engg) and not (C study Engg) and not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (A study Engg) and not (A study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (C study Math) and not (D study Math) and not (D study Phys) and not (C study Engg)) or (not (A study Math) and not (A study Engg) and not (D study Engg) and not (B study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (A study Engg) and not (C study Engg) and not (B study Phil) and not (C study Phil) and not ("Phil: 1?" is Foo)) or (not (A study Math) and not (C study Math) and not (C study Phys) and not (B study Engg) and not (D study Engg) and not ("Phys: 1?" is Foo) and not ("Math: 1?" is Baz)) or (not (B study Math) and not (B study Phys) and not (C study Engg) and not (D study Engg) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Baz)))?',
    ('Bar',): 'C: (U study Phys) xor ((not (B study Phys) and not (B study Engg) and not (C study Engg) and not (D study Engg) and not (B study Phil) and not ("Phys: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (D study Math) and not (B study Engg) and not (C study Engg) and not (D study Engg) and ("Phil: 1?" is Bar) and ("Phys: 1?" is Baz)) or (not (D study Math) and not (B study Phys) and not (D study Phys) and not (A study Engg) and not (A study Phil) and not (B study Phil) and ("Phys: 1?" is Bar) and ("Phil: 1?" is Baz)) or (not (D study Math) and not (B study Phys) and not (A study Engg) and not (B study Engg) and not (A study Phil) and ("Math: 1?" is Bar) and ("Phil: 1?" is Baz)) or (not (A study Math) and not (A study Phys) and not (B study Engg) and not (B study Phil) and not (D study Phil) and ("Phil: 1?" is Bar) and ("Math: 1?" is Baz)) or (not (A study Math) and not (A study Phys) and not (D study Engg) and not (B study Phil) and ("Phil: 1?" is Bar) and ("Phys: 1?" is Baz)) or (not (B study Engg) and (C study Phil) and ("Phil: 1?" is Baz)) or (not (A study Math) and not (B study Math) and not (B study Phys) and not (C study Engg) and not (D study Engg) and not (A study Phil) and not (C study Phil) and ("Phys: 1?" is Bar)) or (not (B study Math) and not (D study Math) and not (A study Phys) and not (D study Phys) and not (B study Engg) and not (C study Engg) and not (A study Phil) and not (C study Phil) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (C study Math) and not (C study Phys) and not (D study Engg) and not (A study Phil) and not (B study Phil) and ("Phil: 1?" is Foo)))?',
    ('Baz',): 'C: (U study Phys) xor not ((not (B study Math) and not (B study Engg) and not (C study Phil) and not ("Math: 1?" is Bar) and not ("Math: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (A study Engg) and not (D study Engg) and not (C study Phil) and not ("Phys: 1?" is Bar) and not ("Phys: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (C study Phys) and not (A study Engg) and not (D study Engg) and not (B study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (A study Math) and not (A study Phys) and not (A study Engg) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (B study Phys) and not (A study Engg) and not (C study Engg) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Engg) and not (A study Phil) and not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (D study Math) and not (B study Phys) and not (C study Phys) and not (A study Engg) and not (A study Phil) and not (D study Phil) and not ("Phil: 1?" is Foo)) or (not (A study Phys) and not (B study Engg) and not (C study Engg) and not (C study Phil) and not ("Phys: 1?" is Foo) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Foo'): 'C: (U study Phys) xor not ((not (A study Phil) and not (D study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (D study Math) and not (D study Phys) and not (A study Phil) and not ("Phil: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not (B study Engg) and not (B study Phil) and not ("Phil: 1?" is Foo)) or (not (A study Math) and not (A study Engg) and not (D study Engg) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Engg) and not (C study Phil) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Bar'): 'C: (U study Phys) xor not ((not (A study Phys) and not (C study Phil) and not ("Phys: 1?" is Bar) and not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (A study Phil) and not (B study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (B study Phys) and not (A study Engg) and not ("Phys: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (B study Engg) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (D study Phil) and not ("Math: 1?" is Bar) and not ("Phys: 1?" is Bar)) or (not (B study Phys) and not (A study Engg) and not (D study Engg) and not (A study Phil) and not ("Phil: 1?" is Baz)) or (not (C study Math) and not (C study Phys) and not (A study Engg) and not (B study Phil) and not ("Phil: 1?" is Bar)) or (not (C study Engg) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Baz)))?',
    ('Foo', 'Baz'): 'B: (U study Phys) xor not ((not (A study Math) and not (B study Phil) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (A study Phys) and not (C study Engg) and not (A study Phil) and not (C study Phil) and not ("Phil: 1?" is Baz)) or (not (A study Engg) and not (D study Engg) and not (B study Phil) and not ("Math: 1?" is Bar)) or (not (A study Engg) and not (A study Phil) and not (B study Phil) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (C study Engg) and not (D study Phil) and not ("Math: 1?" is Baz)) or (not (B study Phys) and not (A study Engg) and not (A study Phil) and not ("Phil: 1?" is Bar)))?',
    ('Bar', 'Foo'): 'D: (U study Phys) xor not ((not (A study Engg) and not (A study Phil) and not ("Math: 1?" is Bar) and not ("Phys: 1?" is Bar)) or (not (C study Engg) and not (B study Phil) and not (D study Phil) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Baz)) or (not (A study Phys) and not (C study Phys) and not (B study Phil) and not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Math) and not (B study Phys) and not (D study Phys) and not (C study Phil) and not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (B study Phys) and not (A study Phil) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (D study Phys) and not (A study Engg) and not (D study Phil) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (A study Math) and not (A study Phys) and not (B study Phil) and not (C study Phil) and not ("Phil: 1?" is Bar)) or (not (B study Engg) and not (D study Phil) and not ("Math: 1?" is Bar) and not ("Phys: 1?" is Baz)))?',
    ('Bar', 'Bar'): 'B: (U study Phys) xor not ((not (C study Engg) and not ("Phys: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (C study Math) and not (A study Phys) and not (B study Phil) and not ("Phys: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Phil) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (D study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (C study Phys) and not (D study Engg) and not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (A study Math) and not (B study Math) and not (B study Phys) and not (D study Engg)) or (not (A study Engg) and not (C study Engg) and not (B study Phil)))?',
    ('Bar', 'Baz'): 'B: (U study Phys) xor not ((not (B study Math) and not (D study Math) and not (B study Phil) and not ("Phys: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not (C study Engg) and not (D study Engg) and not (B study Phil) and not ("Phys: 1?" is Foo) and not ("Phys: 1?" is Baz)) or (not (D study Math) and not (A study Phil) and not ("Phil: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (B study Phys) and not (D study Engg) and not (B study Phil) and not ("Phys: 1?" is Foo)) or (not (A study Math) and not (A study Engg) and not (D study Phil) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar)) or (not (C study Math) and not (C study Phys) and not (A study Phil) and not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (C study Math) and not (A study Engg) and not (D study Engg) and not ("Phys: 1?" is Foo) and not ("Math: 1?" is Baz)) or (not (C study Engg) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Baz)))?',
    ('Baz', 'Foo'): 'C: (U study Phys) xor not ((not (C study Engg) and not ("Math: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (B study Math) and not (C study Math) and not (C study Phys) and not (A study Engg) and not (D study Engg) and not (B study Phil) and not ("Phil: 1?" is Baz)) or (not (D study Math) and not (D study Phys) and not (C study Phil) and not ("Phil: 1?" is Bar)) or (not (A study Math) and not (A study Phys) and not (C study Phil) and not ("Phil: 1?" is Baz)) or (not (A study Phil) and not (D study Phil) and not ("Phil: 1?" is Foo)))?',
    ('Baz', 'Bar'): 'B: (U study Phys) xor not ((not (C study Phys) and not (B study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (D study Math) and not (A study Phys) and not (D study Phys) and not (A study Engg) and not ("Phys: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (B study Engg) and not (D study Engg) and not (B study Phil) and not ("Phys: 1?" is Foo)) or (not (C study Math) and not (D study Math) and not (B study Phys) and not (A study Engg) and not (C study Engg) and not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (C study Math) and not (C study Phys) and not (A study Phil) and not (B study Phil) and not ("Phil: 1?" is Bar)) or (not (B study Math) and not (B study Phys) and not (A study Engg) and not (C study Phil) and not ("Phil: 1?" is Foo)) or (not (A study Math) and not (A study Phys) and not (C study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Baz'): 'B: (U study Phys) xor not ((not (A study Engg) and not (C study Engg) and not (B study Phil)) or (not (A study Phil) and not (C study Phil) and not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (D study Math) and not (A study Engg) and not (B study Phil) and not ("Phys: 1?" is Foo)) or (not (A study Engg) and not (C study Engg) and not ("Phil: 1?" is Bar)) or (not (B study Math) and not (C study Phys) and not (A study Engg) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (B study Phil) and not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (A study Phil) and not (B study Phil) and not ("Phys: 1?" is Bar) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Foo', 'Foo'): 'C: (U study Phys) xor not ((not (B study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (C study Phys) and not ("Phys: 1?" is Foo)) or (not (C study Math) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Foo', 'Bar'): 'C: (U study Phys) xor (((A study Engg) and not (B study Phil) and not (C study Phil) and ("Phil: 1?" is Foo) and ("Math: 1?" is Baz)) or (not (C study Engg) and not (D study Engg) and (B study Phil) and ("Phys: 1?" is Bar) and ("Phil: 1?" is Baz)) or (not (D study Math) and not (B study Phys) and not (A study Engg) and (C study Phil) and ("Phil: 1?" is Bar)))?',
    ('Foo', 'Foo', 'Baz'): 'A: (U study Phys) xor not ((not (A study Phys) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (A study Phil) and not ("Phys: 1?" is Foo)) or (not (D study Engg) and not (C study Phil)) or (not (B study Phil) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (B study Engg) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Bar', 'Foo'): 'B: (U study Phys) xor not ((not (C study Engg) and not (B study Phil) and not ("Math: 1?" is Foo)) or (not (A study Phys) and not (C study Engg) and not (D study Phil)) or (not (D study Math) and not (B study Phys) and not (D study Engg) and not ("Math: 1?" is Foo)) or (not (D study Math) and not (D study Phys) and not ("Phil: 1?" is Bar)) or (not (A study Engg) and not (B study Phil) and not ("Math: 1?" is Baz)) or (not (C study Math) and not (D study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Foo', 'Bar', 'Bar'): 'A: (U study Phys) xor not ((not (B study Phys) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (A study Phys) and not (D study Phil) and not ("Phil: 1?" is Foo)) or (not (B study Engg) and not ("Phys: 1?" is Foo)) or (not (C study Engg) and not (D study Engg) and not (A study Phil)) or (not (D study Math) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Bar', 'Baz'): 'B: (U study Phys) xor not ((not (A study Engg) and not (C study Engg) and not (A study Phil)) or (not (A study Math) and not (D study Phys) and not (B study Phil) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Baz)) or (not (C study Engg) and not (C study Phil) and not ("Phil: 1?" is Foo)) or (not (A study Phys) and not (A study Engg) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (D study Engg) and not (B study Phil) and not (C study Phil) and not ("Math: 1?" is Baz)) or (not (B study Phys) and not (B study Phil) and not ("Math: 1?" is Bar)) or (not (C study Math) and not (C study Phys) and not (D study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Foo', 'Baz', 'Foo'): 'A: (U study Phys) xor not ((not (A study Phys) and not ("Phil: 1?" is Baz)) or (not (D study Engg) and not ("Phil: 1?" is Baz)) or (not (A study Engg) and not (C study Phil)) or (not (D study Phil) and not ("Math: 1?" is Baz)) or (not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Baz)))?',
    ('Foo', 'Baz', 'Bar'): 'A: (U study Phys) xor not ((not (A study Phys) and not (D study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Baz)) or (not (D study Phys) and not (A study Phil) and not ("Phys: 1?" is Foo)) or (not (A study Phys) and not (C study Engg)) or (not (B study Phys) and not (A study Phil) and not ("Phil: 1?" is Bar)) or (not (B study Phil) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)))?',
    ('Foo', 'Baz', 'Baz'): 'B: (U study Phys) xor not ((not (A study Engg) and not (A study Phil)) or (not (A study Engg) and not ("Phys: 1?" is Baz)) or (not (D study Engg) and not (C study Phil)) or (not ("Phil: 1?" is Foo) and not ("Math: 1?" is Baz)) or (not (D study Math) and not (A study Phil) and not ("Math: 1?" is Baz)))?',
    ('Bar', 'Foo', 'Foo'): 'B: (U study Phys) xor not ((not (B study Phys) and not (A study Engg) and not ("Phys: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Engg) and not (A study Phil) and not ("Phys: 1?" is Bar)) or (not (D study Phys) and not ("Math: 1?" is Baz)) or (not (C study Engg) and not (B study Phil)) or (not (D study Phil) and not ("Phil: 1?" is Bar)))?',
    ('Bar', 'Foo', 'Bar'): 'D: (U study Phys) xor not ((not (B study Phil) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (C study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (C study Math) and not (D study Phil) and not ("Phys: 1?" is Bar)) or (not (C study Phys) and not (D study Phil) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (A study Engg)))?',
    ('Bar', 'Foo', 'Baz'): 'A: (U study Phys) xor not ((not (C study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (D study Phil) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (A study Math) and not (D study Math) and not (D study Phys) and not (C study Engg) and not ("Math: 1?" is Bar)) or (not (C study Math) and not (A study Phil) and not ("Phys: 1?" is Bar)) or (not (A study Phys) and not (B study Engg)))?',
    ('Bar', 'Bar', 'Foo'): 'B: (U study Phys) xor not ((not (B study Math) and not (C study Phil) and not ("Math: 1?" is Baz)) or (not (D study Phil) and not ("Phil: 1?" is Bar)) or (not (B study Math) and not (A study Phil) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not (D study Phys) and not ("Phys: 1?" is Bar)) or (not (D study Math) and not (A study Phil) and not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (D study Math) and not (A study Engg) and not ("Phys: 1?" is Baz)))?',
    ('Bar', 'Bar', 'Bar'): 'C: (U study Phys) xor not ((not (D study Phil)) or (not (C study Engg) and not ("Math: 1?" is Bar)) or (not (B study Math) and not (B study Phys)) or (not (C study Math) and not (A study Phys) and not ("Phys: 1?" is Baz)) or (not (C study Phys) and not ("Phil: 1?" is Baz)))?',
    ('Bar', 'Bar', 'Baz'): 'A: (U study Phys) xor not ((not (A study Phys) and not (B study Phil) and not ("Math: 1?" is Baz)) or (not (D study Engg) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (C study Engg) and not ("Math: 1?" is Foo)) or (not (A study Math) and not (C study Math) and not ("Phys: 1?" is Baz)) or (not (D study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Bar', 'Baz', 'Foo'): 'C: (U study Phys) xor not ((not (C study Phys) and not ("Phys: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (B study Phil) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (D study Engg) and not ("Math: 1?" is Bar)) or (not (A study Engg) and not (A study Phil) and not (D study Phil) and not ("Phys: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Baz)) or (not (C study Math) and not (D study Engg) and not (B study Phil)))?',
    ('Bar', 'Baz', 'Bar'): 'D: (U study Phys) xor ((not (D study Phys) and (A study Engg) and not (C study Phil) and not (D study Phil) and not ("Phil: 1?" is Foo) and ("Phys: 1?" is Baz)) or (not (A study Math) and not (C study Math) and not (C study Phys) and not (B study Engg) and not (D study Engg) and not (A study Phil) and not (B study Phil) and not ("Phys: 1?" is Bar) and ("Phil: 1?" is Baz)) or (not (A study Math) and (C study Engg) and (D study Phil) and ("Phil: 1?" is Baz)) or ((C study Math) and (D study Phil) and ("Phil: 1?" is Foo)))?',
    ('Bar', 'Baz', 'Baz'): 'A: (U study Phys) xor not ((not (A study Math) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (A study Phys) and not ("Phil: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Phil) and not ("Phil: 1?" is Foo)) or (not (D study Phil) and not ("Phil: 1?" is Bar)) or (not (C study Engg) and not ("Phys: 1?" is Bar)))?',
    ('Baz', 'Foo', 'Foo'): 'B: (U study Phys) xor not ((not (B study Math) and not (C study Engg) and not ("Phys: 1?" is Baz)) or (not (A study Phil) and not ("Phil: 1?" is Foo) and not ("Phil: 1?" is Bar)) or (not (B study Phys) and not (C study Engg) and not ("Phys: 1?" is Bar)) or (not (D study Math) and not (D study Phys) and not (C study Phil) and not ("Phil: 1?" is Bar)) or (not (A study Phys) and not (B study Phil) and not (C study Phil) and not ("Phil: 1?" is Baz)) or (not (B study Phys) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (B study Math) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)))?',
    ('Baz', 'Foo', 'Bar'): 'D: (U study Phys) xor not ((not (B study Phil) and not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (B study Phys) and not ("Phys: 1?" is Bar)) or (not (A study Phys) and not (B study Engg) and not (B study Phil) and not ("Math: 1?" is Bar)) or (not (A study Phil) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (B study Engg) and not (C study Engg)))?',
    ('Baz', 'Foo', 'Baz'): 'A: (U study Phys) xor ((not (B study Phys) and (C study Engg) and (D study Phil) and not ("Math: 1?" is Foo) and ("Phil: 1?" is Bar)) or (not (B study Math) and not (B study Phys) and (D study Phil) and ("Phil: 1?" is Bar) and ("Phys: 1?" is Baz)) or ((C study Engg) and (B study Phil) and ("Math: 1?" is Bar) and ("Phys: 1?" is Baz)) or ((C study Engg) and (A study Phil) and ("Phil: 1?" is Baz)))?',
    ('Baz', 'Bar', 'Foo'): 'A: (U study Phys) xor not ((not (D study Engg) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not ("Phys: 1?" is Baz) and not ("Phil: 1?" is Baz)) or (not (A study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Baz)) or (not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (B study Engg) and not (D study Engg) and not (B study Phil)) or (not (C study Engg) and not (D study Phil) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (D study Math) and not (B study Phys) and not (C study Phys) and not (B study Phil)))?',
    ('Baz', 'Bar', 'Bar'): 'D: (U study Phys) xor not ((not (C study Phys) and not (D study Phys) and not (A study Engg) and not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Bar)) or (not (B study Engg) and not ("Phil: 1?" is Baz)) or (not (B study Phys) and not (D study Phil) and not ("Math: 1?" is Foo)) or (not (D study Math) and not (A study Engg) and not (A study Phil) and not ("Phil: 1?" is Foo)) or (not (A study Phys) and not (C study Engg) and not (D study Phil)))?',
    ('Baz', 'Bar', 'Baz'): 'D: (U study Phys) xor not ((not (D study Phys) and not (B study Engg) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar)) or (not (D study Math) and not (C study Phys) and not (A study Engg) and not (C study Engg)) or (not (A study Phys) and not (C study Phil) and not ("Phil: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (C study Phys) and not (B study Engg) and not (D study Phil) and not ("Phys: 1?" is Foo)) or (not (B study Math) and not (A study Engg) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Baz)) or (not (A study Math) and not (B study Phil) and not ("Phil: 1?" is Bar)))?',
    ('Baz', 'Baz', 'Foo'): 'D: (U study Phys) xor not ((not (A study Engg) and not (C study Engg)) or (not (A study Phil) and not ("Phil: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (A study Math) and not (C study Phys) and not (C study Phil) and not ("Math: 1?" is Bar)) or (not (D study Math) and not (A study Engg) and not ("Math: 1?" is Baz)) or (not (B study Phys) and not (D study Phys) and not (C study Engg) and not ("Math: 1?" is Baz)) or (not (B study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Baz', 'Bar'): 'C: (U study Phys) xor not ((not ("Phil: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (D study Engg) and not (A study Phil) and not ("Math: 1?" is Baz)) or (not (C study Engg) and not (B study Phil)) or (not (D study Phys) and not (A study Engg) and not ("Phys: 1?" is Baz)) or (not (C study Phys) and not (A study Engg) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Baz', 'Baz'): 'C: (U study Phys) xor not ((not (B study Math) and not ("Phys: 1?" is Bar) and not ("Phys: 1?" is Baz)) or (not (A study Engg) and not ("Phil: 1?" is Bar)) or (not (A study Phys) and not (A study Engg)) or (not (D study Phil)) or (not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (B study Phys) and not (C study Engg) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Foo', 'Bar', 'Foo'): 'C: (U study Phys) xor not ((not (B study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Phil: 1?" is Baz)) or (not (C study Phys) and not ("Math: 1?" is Bar)) or (not (C study Math) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Foo', 'Bar', 'Bar'): 'A: (U study Phys) xor not ((not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (C study Phil)) or (not (B study Math) and not (D study Phys)) or (not (A study Phys) and not ("Phys: 1?" is Foo)) or (not (A study Math) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Foo', 'Bar', 'Baz'): 'B: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Math) and not ("Phys: 1?" is Bar)) or (not (B study Phys) and not ("Math: 1?" is Bar)))?',
    ('Foo', 'Foo', 'Baz', 'Foo'): 'B: (U study Phys) xor not ((not (A study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not ("Phys: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Bar)))?',
    ('Foo', 'Foo', 'Baz', 'Bar'): 'A: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Phil: 1?" is Baz)) or (not (A study Math) and not ("Math: 1?" is Bar)) or (not (A study Phys) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Foo', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Phil', 'C': 'Math', 'D': 'Engg'},
    ('Foo', 'Bar', 'Foo', 'Foo'): 'B: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not ("Phys: 1?" is Foo)) or (not (B study Math) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Bar', 'Foo', 'Bar'): {'A': 'Phys', 'B': 'Phil', 'C': 'Math', 'D': 'Engg'},
    ('Foo', 'Bar', 'Foo', 'Baz'): 'A: (U study Phys) xor not ((not (C study Engg)) or (not (D study Math) and not (B study Phys)) or (not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (B study Phil) and not ("Phil: 1?" is Bar)) or (not ("Phys: 1?" is Bar) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Bar', 'Bar', 'Foo'): 'C: (U study Phys) xor not ((not (A study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (C study Math) and not ("Phys: 1?" is Bar)) or (not (C study Phys) and not ("Math: 1?" is Bar)))?',
    ('Foo', 'Bar', 'Bar', 'Bar'): 'A: (U study Phys) xor (((D study Math) and (C study Engg) and (B study Phil) and ("Phys: 1?" is Bar) and ("Phil: 1?" is Baz)))?',
    ('Foo', 'Bar', 'Bar', 'Baz'): 'A: (U study Phys) xor ((not (B study Phys) and (D study Engg) and (C study Phil) and ("Phil: 1?" is Bar) and ("Math: 1?" is Baz)) or ((A study Math) and (C study Engg) and (D study Phil) and ("Phil: 1?" is Bar) and ("Phys: 1?" is Baz)))?',
    ('Foo', 'Bar', 'Baz', 'Foo'): 'D: (U study Phys) xor not ((not (A study Engg)) or (not (C study Phys) and not ("Phys: 1?" is Bar)) or (not (D study Math) and not (B study Phil)) or (not (C study Math) and not ("Math: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (C study Phil) and not ("Phil: 1?" is Foo)))?',
    ('Foo', 'Bar', 'Baz', 'Bar'): 'B: (U study Phys) xor not ((not (A study Engg) and not ("Phil: 1?" is Foo)) or (not (D study Phys) and not (A study Phil)) or (not (D study Engg) and not ("Math: 1?" is Foo)) or (not (B study Phys) and not ("Phys: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Bar)))?',
    ('Foo', 'Bar', 'Baz', 'Baz'): 'A: (U study Phys) xor not ((not (C study Engg)) or (not (D study Math) and not (B study Phys)) or (not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (B study Phil) and not ("Phil: 1?" is Bar)) or (not ("Phys: 1?" is Bar) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Baz', 'Foo', 'Foo'): 'C: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Phil: 1?" is Baz)) or (not (B study Math) and not ("Math: 1?" is Bar)) or (not (B study Phys) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Baz', 'Foo', 'Bar'): 'C: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Phil: 1?" is Baz)) or (not (B study Phys) and not ("Math: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Baz', 'Foo', 'Baz'): 'B: (U study Phys) xor not ((not (C study Math) and not ("Phys: 1?" is Foo)) or (not (A study Engg) and not (C study Phil)) or (not (B study Math) and not ("Math: 1?" is Foo)) or (not (D study Engg) and not ("Phil: 1?" is Baz)) or (not (D study Phil) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Baz', 'Bar', 'Foo'): 'D: (U study Phys) xor not ((not (A study Phil) and not (B study Phil)) or (not (A study Math) and not ("Phil: 1?" is Foo)) or (not (B study Math) and not (D study Math) and not ("Phil: 1?" is Bar)) or (not (B study Phys) and not ("Phys: 1?" is Baz)) or (not (D study Phys) and not ("Phys: 1?" is Bar)))?',
    ('Foo', 'Baz', 'Bar', 'Bar'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Foo', 'Baz', 'Bar', 'Baz'): 'A: (U study Phys) xor not ((not (B study Phil)) or (not (C study Math) and not (D study Math)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (D study Engg) and not ("Phys: 1?" is Foo)) or (not (C study Engg) and not ("Math: 1?" is Foo)))?',
    ('Foo', 'Baz', 'Baz', 'Bar'): 'C: (U study Phys) xor not ((not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not (A study Phil)) or (not (B study Math) and not (A study Engg) and not ("Phys: 1?" is Bar)) or (not (D study Engg) and not (C study Phil)) or (not (C study Math) and not ("Math: 1?" is Bar)))?',
    ('Foo', 'Baz', 'Baz', 'Baz'): 'D: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not (B study Phys) and not ("Phys: 1?" is Baz)) or (not (B study Math) and not ("Math: 1?" is Baz)))?',
    ('Bar', 'Foo', 'Foo', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Bar', 'Foo', 'Foo', 'Bar'): 'D: (U study Phys) xor (((C study Math) and (A study Engg) and (B study Phil) and ("Phil: 1?" is Bar) and ("Math: 1?" is Baz)))?',
    ('Bar', 'Foo', 'Foo', 'Baz'): 'B: (U study Phys) xor not ((not (C study Engg)) or (not (A study Phil) and not ("Phil: 1?" is Foo)) or (not (B study Phys) and not (D study Phil)) or (not (A study Math) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (A study Phys) and not ("Phys: 1?" is Baz)))?',
    ('Bar', 'Foo', 'Bar', 'Foo'): 'D: (U study Phys) xor not ((not (B study Phil)) or (not (D study Phys) and not (A study Engg)) or (not ("Phil: 1?" is Baz)) or (not (D study Math) and not ("Math: 1?" is Bar)) or (not (A study Math) and not ("Math: 1?" is Foo)))?',
    ('Bar', 'Foo', 'Bar', 'Bar'): 'C: (U study Phys) xor not ((not (A study Engg)) or (not (B study Phys) and not ("Phys: 1?" is Foo)) or (not (C study Math) and not (D study Phil)) or (not (B study Math) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (B study Phil) and not ("Phil: 1?" is Bar)))?',
    ('Bar', 'Foo', 'Bar', 'Baz'): 'D: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not ("Phys: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Bar)))?',
    ('Bar', 'Foo', 'Baz', 'Foo'): 'A: (U study Phys) xor not ((not (D study Phil)) or (not (B study Math) and not (C study Phys)) or (not ("Phil: 1?" is Baz)) or (not (B study Engg) and not ("Math: 1?" is Bar)) or (not (C study Engg) and not ("Math: 1?" is Foo)))?',
    ('Bar', 'Foo', 'Baz', 'Bar'): 'C: (U study Phys) xor not ((not (B study Engg)) or (not (C study Math) and not ("Phys: 1?" is Baz)) or (not (A study Phil) and not ("Phil: 1?" is Baz)) or (not (C study Phys) and not (D study Phil) and not ("Math: 1?" is Baz)) or (not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Bar)))?',
    ('Bar', 'Foo', 'Baz', 'Baz'): 'D: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not ("Phys: 1?" is Bar)) or (not (A study Math) and not ("Math: 1?" is Bar)))?',
    ('Bar', 'Bar', 'Foo', 'Foo'): 'B: (U study Phys) xor not ((not (D study Phys) and not (A study Engg)) or (not (C study Engg) and not ("Phys: 1?" is Foo)) or (not (B study Phys) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (C study Phil)) or (not (C study Phys) and not ("Phil: 1?" is Bar)))?',
    ('Bar', 'Bar', 'Foo', 'Baz'): 'B: (U study Phys) xor (((D study Phys) and (A study Engg) and (C study Phil) and ("Phil: 1?" is Bar) and ("Math: 1?" is Baz)) or ((D study Math) and (C study Engg) and (A study Phil) and ("Phil: 1?" is Bar) and ("Phys: 1?" is Baz)))?',
    ('Bar', 'Bar', 'Bar', 'Foo'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Bar', 'Bar', 'Bar'): 'B: (U study Phys) xor not ((not (D study Phil)) or (not (C study Phys) and not ("Phil: 1?" is Baz)) or (not (B study Math) and not (A study Engg)) or (not (B study Phys) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (A study Phys) and not ("Phys: 1?" is Bar)))?',
    ('Bar', 'Bar', 'Bar', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Bar', 'Baz', 'Foo'): 'A: (U study Phys) xor not ((not (B study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Phil: 1?" is Baz)) or (not (A study Phys) and not ("Math: 1?" is Bar)) or (not (A study Math) and not ("Math: 1?" is Foo)))?',
    ('Bar', 'Bar', 'Baz', 'Bar'): 'B: (U study Phys) xor not ((not ("Math: 1?" is Bar)) or (not (C study Engg)) or (not (B study Math) and not (D study Phys)) or (not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (B study Phil) and not ("Phys: 1?" is Baz)))?',
    ('Bar', 'Bar', 'Baz', 'Baz'): 'C: (U study Phys) xor (((A study Math) and (C study Engg) and (D study Phil) and ("Phil: 1?" is Foo)))?',
    ('Bar', 'Baz', 'Foo', 'Foo'): 'B: (U study Phys) xor not ((not (A study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not ("Phys: 1?" is Foo)) or (not (B study Math) and not ("Math: 1?" is Foo)))?',
    ('Bar', 'Baz', 'Foo', 'Bar'): 'D: (U study Phys) xor not ((not (C study Phys) and not (B study Engg) and not ("Phys: 1?" is Baz)) or (not ("Phil: 1?" is Foo)) or (not (A study Phys) and not (B study Phil)) or (not (D study Phys) and not (B study Engg) and not ("Phys: 1?" is Bar)) or (not (A study Engg) and not (D study Phil)))?',
    ('Bar', 'Baz', 'Foo', 'Baz'): 'A: (U study Phys) xor not ((not (D study Engg)) or (not (B study Phys) and not ("Math: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (A study Math) and not (C study Phil)) or (not (B study Math) and not ("Phys: 1?" is Bar)) or (not (B study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Bar', 'Baz', 'Bar', 'Foo'): 'C: (U study Phys) xor not ((not (A study Engg) and not (D study Phil)) or (not (D study Math) and not (B study Engg) and not ("Math: 1?" is Baz)) or (not (C study Math) and not ("Phil: 1?" is Bar)) or (not (B study Phil) and not ("Phil: 1?" is Foo)) or (not (B study Phys) and not ("Phys: 1?" is Baz)))?',
    ('Bar', 'Baz', 'Bar', 'Bar'): 'B: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Phil: 1?" is Baz)) or (not (B study Phys) and not ("Math: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Foo)))?',
    ('Bar', 'Baz', 'Bar', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Baz', 'Baz', 'Foo'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Bar', 'Baz', 'Baz', 'Bar'): 'B: (U study Phys) xor not ((not (C study Engg)) or (not (D study Math) and not ("Phys: 1?" is Baz)) or (not (B study Phys) and not (A study Phil)) or (not (B study Math) and not ("Phys: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (A study Math) and not ("Phil: 1?" is Bar)))?',
    ('Bar', 'Baz', 'Baz', 'Baz'): 'A: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Engg)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Engg) and not ("Phys: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Bar)))?',
    ('Baz', 'Foo', 'Foo', 'Foo'): 'D: (U study Phys) xor not ((not (C study Engg)) or (not (A study Math) and not ("Phys: 1?" is Bar)) or (not (D study Phys) and not (B study Phil)) or (not (A study Phys) and not ("Math: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (A study Phil) and not ("Phil: 1?" is Foo)))?',
    ('Baz', 'Foo', 'Foo', 'Bar'): 'B: (U study Phys) xor not ((not (B study Phys)) or (not (A study Engg) and not ("Phys: 1?" is Bar)) or (not (D study Math) and not (C study Phil)) or (not (A study Math) and not ("Math: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (A study Phil) and not ("Phil: 1?" is Foo)))?',
    ('Baz', 'Foo', 'Foo', 'Baz'): 'B: (U study Phys) xor not ((not (B study Math)) or (not (D study Engg) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not (C study Phil)) or (not (A study Engg) and not ("Math: 1?" is Foo) and not ("Phys: 1?" is Bar)) or (not (C study Engg) and not ("Phil: 1?" is Foo)))?',
    ('Baz', 'Foo', 'Bar', 'Foo'): 'C: (U study Phys) xor not ((not (A study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Phil: 1?" is Baz)) or (not (C study Phys) and not ("Math: 1?" is Bar)) or (not (C study Math) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Foo', 'Bar', 'Bar'): 'B: (U study Phys) xor not ((not (C study Engg)) or (not (D study Phys) and not ("Phys: 1?" is Foo)) or (not (B study Math) and not (A study Phil)) or (not (B study Phys) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar)) or (not (A study Phys) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Foo', 'Bar', 'Baz'): 'D: (U study Phys) xor not ((not (B study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not ("Phys: 1?" is Bar)) or (not (A study Math) and not ("Math: 1?" is Bar)))?',
    ('Baz', 'Foo', 'Baz', 'Foo'): 'A: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not ("Phys: 1?" is Foo)) or (not (A study Math) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Foo', 'Baz', 'Bar'): 'A: (U study Phys) xor not ((not (B study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (A study Phys) and not ("Phys: 1?" is Bar)) or (not (A study Math) and not ("Math: 1?" is Bar)))?',
    ('Baz', 'Foo', 'Baz', 'Baz'): 'B: (U study Phys) xor not ((not (C study Engg)) or (not (D study Phys) and not ("Phys: 1?" is Foo)) or (not (B study Math) and not (A study Phil)) or (not (B study Phys) and not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar)) or (not (A study Phys) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Bar', 'Foo', 'Foo'): 'A: (U study Phys) xor not ((not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (C study Phil)) or (not (D study Math) and not (B study Phys)) or (not (B study Engg) and not ("Phys: 1?" is Foo)) or (not (D study Engg) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Bar', 'Foo', 'Bar'): 'D: (U study Phys) xor not ((not (A study Phys) and not (B study Engg) and not ("Phys: 1?" is Baz)) or (not ("Phil: 1?" is Foo)) or (not (C study Phys) and not (B study Phil)) or (not (D study Phys) and not (B study Engg) and not ("Phys: 1?" is Bar)) or (not (C study Engg) and not (D study Phil)))?',
    ('Baz', 'Bar', 'Foo', 'Baz'): 'C: (U study Phys) xor not ((not (D study Engg)) or (not (B study Phys) and not ("Phys: 1?" is Bar)) or (not (C study Math) and not (A study Phil)) or (not (B study Math) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Bar)) or (not (B study Phil) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Bar', 'Bar', 'Foo'): 'D: (U study Phys) xor not ((not (B study Engg) and not ("Math: 1?" is Bar)) or (not (A study Math) and not ("Phys: 1?" is Foo)) or (not (D study Phys) and not (D study Phil) and not ("Phil: 1?" is Bar)) or (not (A study Phys) and not (C study Engg) and not ("Phil: 1?" is Foo)) or (not (D study Math) and not (C study Phys) and not (A study Phil)))?',
    ('Baz', 'Bar', 'Bar', 'Bar'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Bar', 'Bar', 'Baz'): 'C: (U study Phys) xor not ((not (D study Phil)) or (not (C study Math) and not (C study Phys)) or (not ("Phil: 1?" is Baz)) or (not (B study Math) and not ("Math: 1?" is Bar)) or (not (B study Phys) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Bar', 'Baz', 'Foo'): 'C: (U study Phys) xor not ((not (D study Math) and not (C study Phys)) or (not (B study Phil) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (C study Phil) and not ("Phys: 1?" is Bar)) or (not (A study Engg) and not (D study Phil) and not ("Phil: 1?" is Bar)) or (not (B study Engg) and not ("Phil: 1?" is Baz)))?',
    ('Baz', 'Bar', 'Baz', 'Bar'): 'D: (U study Phys) xor not ((not (A study Engg) and not (C study Engg)) or (not (C study Math) and not ("Phil: 1?" is Bar)) or (not (D study Phil) and not ("Phil: 1?" is Baz)) or (not (A study Phys) and not (B study Phil)) or (not ("Math: 1?" is Foo) and not ("Phil: 1?" is Bar)))?',
    ('Baz', 'Bar', 'Baz', 'Baz'): 'B: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Math) and not ("Phys: 1?" is Foo)) or (not (B study Phys) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Baz', 'Foo', 'Foo'): 'D: (U study Phys) xor not ((not (C study Phil)) or (not (D study Math) and not (D study Phys)) or (not ("Phil: 1?" is Baz)) or (not (B study Phys) and not ("Math: 1?" is Bar)) or (not (B study Math) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Baz', 'Foo', 'Bar'): 'D: (U study Phys) xor not ((not (D study Phys) and not (C study Engg)) or (not (B study Phys) and not ("Phil: 1?" is Foo)) or (not (C study Math) and not ("Math: 1?" is Bar) and not ("Phil: 1?" is Baz)) or (not (B study Phil) and not ("Math: 1?" is Foo)) or (not (D study Math) and not ("Math: 1?" is Baz)))?',
    ('Baz', 'Baz', 'Foo', 'Baz'): 'D: (U study Phys) xor not ((not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (B study Phil)) or (not (D study Math) and not (C study Engg)) or (not (D study Phys) and not ("Phys: 1?" is Bar)) or (not (C study Phys) and not ("Math: 1?" is Bar)))?',
    ('Baz', 'Baz', 'Bar', 'Foo'): 'A: (U study Phys) xor ((not (A study Phys) and (D study Engg) and (B study Phil) and ("Phil: 1?" is Bar) and ("Phys: 1?" is Baz)) or ((B study Math) and (C study Engg) and (A study Phil) and ("Phil: 1?" is Baz)))?',
    ('Baz', 'Baz', 'Bar', 'Bar'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Baz', 'Bar', 'Baz'): 'D: (U study Phys) xor not ((not (B study Math) and not (A study Engg)) or (not (B study Phil) and not ("Phil: 1?" is Baz)) or (not (C study Phys) and not (A study Phil) and not ("Math: 1?" is Foo)) or (not (D study Phys) and not ("Math: 1?" is Baz)) or (not ("Phys: 1?" is Foo) and not ("Phil: 1?" is Bar)))?',
    ('Baz', 'Baz', 'Baz', 'Foo'): 'B: (U study Phys) xor not ((not ("Math: 1?" is Baz) and not ("Phys: 1?" is Baz)) or (not (D study Phil)) or (not (C study Math) and not (A study Phys)) or (not (B study Math) and not ("Phys: 1?" is Foo)) or (not (B study Phys) and not ("Math: 1?" is Foo)))?',
    ('Baz', 'Baz', 'Baz', 'Bar'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Baz', 'Baz', 'Baz'): 'B: (U study Phys) xor not ((not (C study Phys) and not ("Phys: 1?" is Baz)) or (not (D study Phil)) or (not (B study Math) and not (A study Engg)) or (not (B study Phys) and not ("Phil: 1?" is Bar) and not ("Math: 1?" is Baz)) or (not (A study Phys) and not ("Phil: 1?" is Foo) and not ("Math: 1?" is Baz)))?',
    ('Foo', 'Foo', 'Bar', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Foo', 'Foo', 'Bar', 'Foo', 'Bar'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Foo', 'Foo', 'Bar', 'Bar', 'Foo'): {'A': 'Phys', 'B': 'Math', 'C': 'Phil', 'D': 'Engg'},
    ('Foo', 'Foo', 'Bar', 'Bar', 'Baz'): {'A': 'Math', 'B': 'Engg', 'C': 'Phil', 'D': 'Phys'},
    ('Foo', 'Foo', 'Bar', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Foo', 'Foo', 'Bar', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Foo', 'Foo', 'Baz', 'Foo', 'Bar'): {'A': 'Phil', 'B': 'Phys', 'C': 'Math', 'D': 'Engg'},
    ('Foo', 'Foo', 'Baz', 'Foo', 'Baz'): {'A': 'Phil', 'B': 'Math', 'C': 'Phys', 'D': 'Engg'},
    ('Foo', 'Foo', 'Baz', 'Bar', 'Foo'): {'A': 'Math', 'B': 'Engg', 'C': 'Phil', 'D': 'Phys'},
    ('Foo', 'Foo', 'Baz', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Engg', 'C': 'Phil', 'D': 'Math'},
    ('Foo', 'Bar', 'Foo', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Foo', 'Bar', 'Foo', 'Foo', 'Baz'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Foo', 'Bar', 'Foo', 'Baz', 'Foo'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Foo', 'Bar', 'Foo', 'Baz', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Foo', 'Bar', 'Foo', 'Baz', 'Baz'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Foo', 'Bar', 'Bar', 'Foo', 'Bar'): {'A': 'Phil', 'B': 'Engg', 'C': 'Math', 'D': 'Phys'},
    ('Foo', 'Bar', 'Bar', 'Foo', 'Baz'): {'A': 'Phil', 'B': 'Engg', 'C': 'Phys', 'D': 'Math'},
    ('Foo', 'Bar', 'Bar', 'Bar', 'Foo'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Foo', 'Bar', 'Bar', 'Bar', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Foo', 'Bar', 'Bar', 'Baz', 'Foo'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Foo', 'Bar', 'Bar', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Phil', 'D': 'Engg'},
    ('Foo', 'Bar', 'Baz', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Foo', 'Bar', 'Baz', 'Foo', 'Bar'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Foo', 'Bar', 'Baz', 'Foo', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Foo', 'Bar', 'Baz', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Foo', 'Bar', 'Baz', 'Bar', 'Bar'): {'A': 'Phil', 'B': 'Phys', 'C': 'Math', 'D': 'Engg'},
    ('Foo', 'Bar', 'Baz', 'Bar', 'Baz'): {'A': 'Phil', 'B': 'Math', 'C': 'Phys', 'D': 'Engg'},
    ('Foo', 'Bar', 'Baz', 'Baz', 'Foo'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Foo', 'Bar', 'Baz', 'Baz', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Foo', 'Bar', 'Baz', 'Baz', 'Baz'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Foo', 'Bar'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Bar', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Baz', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Foo', 'Baz', 'Foo', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Phil', 'D': 'Engg'},
    ('Foo', 'Baz', 'Bar', 'Foo', 'Foo'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Foo', 'Baz', 'Bar', 'Foo', 'Bar'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Foo', 'Baz', 'Bar', 'Foo', 'Baz'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Foo', 'Baz', 'Bar', 'Baz', 'Foo'): {'A': 'Phys', 'B': 'Phil', 'C': 'Math', 'D': 'Engg'},
    ('Foo', 'Baz', 'Bar', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Foo', 'Baz', 'Baz', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Foo', 'Baz', 'Baz', 'Bar', 'Bar'): {'A': 'Phil', 'B': 'Math', 'C': 'Phys', 'D': 'Engg'},
    ('Foo', 'Baz', 'Baz', 'Bar', 'Baz'): {'A': 'Phil', 'B': 'Phys', 'C': 'Math', 'D': 'Engg'},
    ('Foo', 'Baz', 'Baz', 'Baz', 'Foo'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Foo', 'Baz', 'Baz', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Foo', 'Baz', 'Baz', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Bar', 'Foo', 'Foo', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Bar', 'Foo', 'Foo', 'Bar', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Bar', 'Foo', 'Foo', 'Baz', 'Foo'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Bar', 'Foo', 'Foo', 'Baz', 'Bar'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Foo', 'Foo', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Foo', 'Bar', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Bar', 'Foo', 'Bar', 'Foo', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Bar', 'Foo', 'Bar', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Foo', 'Bar', 'Bar', 'Bar'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Bar', 'Foo', 'Bar', 'Bar', 'Baz'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Bar', 'Foo', 'Bar', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Bar', 'Foo', 'Bar', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Bar', 'Foo', 'Baz', 'Foo', 'Foo'): {'A': 'Math', 'B': 'Engg', 'C': 'Phys', 'D': 'Phil'},
    ('Bar', 'Foo', 'Baz', 'Foo', 'Bar'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Foo', 'Baz', 'Bar', 'Foo'): {'A': 'Phil', 'B': 'Engg', 'C': 'Phys', 'D': 'Math'},
    ('Bar', 'Foo', 'Baz', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Engg', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Foo', 'Baz', 'Bar', 'Baz'): {'A': 'Phil', 'B': 'Engg', 'C': 'Math', 'D': 'Phys'},
    ('Bar', 'Foo', 'Baz', 'Baz', 'Bar'): {'A': 'Phys', 'B': 'Engg', 'C': 'Phil', 'D': 'Math'},
    ('Bar', 'Foo', 'Baz', 'Baz', 'Baz'): {'A': 'Math', 'B': 'Engg', 'C': 'Phil', 'D': 'Phys'},
    ('Bar', 'Bar', 'Foo', 'Foo', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Bar', 'Bar', 'Foo', 'Foo', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Bar', 'Bar', 'Foo', 'Foo', 'Baz'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Bar', 'Bar', 'Foo', 'Baz', 'Foo'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Bar', 'Bar', 'Foo', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Bar', 'Bar', 'Bar', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Bar', 'Bar', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Bar', 'Bar', 'Bar', 'Baz'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Bar', 'Bar', 'Baz', 'Foo', 'Foo'): {'A': 'Phys', 'B': 'Phil', 'C': 'Math', 'D': 'Engg'},
    ('Bar', 'Bar', 'Baz', 'Foo', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Phys', 'D': 'Engg'},
    ('Bar', 'Bar', 'Baz', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Bar', 'Baz', 'Bar', 'Baz'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Bar', 'Bar', 'Baz', 'Baz', 'Foo'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Bar', 'Baz', 'Baz', 'Bar'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Bar', 'Baz', 'Baz', 'Baz'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Baz', 'Foo', 'Foo', 'Foo'): {'A': 'Phil', 'B': 'Phys', 'C': 'Math', 'D': 'Engg'},
    ('Bar', 'Baz', 'Foo', 'Foo', 'Baz'): {'A': 'Phil', 'B': 'Math', 'C': 'Phys', 'D': 'Engg'},
    ('Bar', 'Baz', 'Foo', 'Bar', 'Foo'): {'A': 'Phys', 'B': 'Engg', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Baz', 'Foo', 'Bar', 'Bar'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Bar', 'Baz', 'Foo', 'Bar', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Bar', 'Baz', 'Foo', 'Baz', 'Foo'): {'A': 'Math', 'B': 'Phys', 'C': 'Phil', 'D': 'Engg'},
    ('Bar', 'Baz', 'Foo', 'Baz', 'Bar'): {'A': 'Phys', 'B': 'Math', 'C': 'Phil', 'D': 'Engg'},
    ('Bar', 'Baz', 'Foo', 'Baz', 'Baz'): {'A': 'Math', 'B': 'Phil', 'C': 'Phys', 'D': 'Engg'},
    ('Bar', 'Baz', 'Bar', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Bar', 'Baz', 'Bar', 'Foo', 'Bar'): {'A': 'Phys', 'B': 'Engg', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Baz', 'Bar', 'Foo', 'Baz'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Baz', 'Bar', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Bar', 'Baz', 'Bar', 'Bar', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Bar', 'Baz', 'Baz', 'Bar', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Bar', 'Baz', 'Baz', 'Bar', 'Bar'): {'A': 'Math', 'B': 'Phys', 'C': 'Engg', 'D': 'Phil'},
    ('Bar', 'Baz', 'Baz', 'Bar', 'Baz'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Bar', 'Baz', 'Baz', 'Baz', 'Bar'): {'A': 'Phys', 'B': 'Engg', 'C': 'Math', 'D': 'Phil'},
    ('Bar', 'Baz', 'Baz', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Foo', 'Foo', 'Foo', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Foo', 'Foo', 'Foo', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Foo', 'Foo', 'Foo', 'Baz'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Foo', 'Foo', 'Bar', 'Foo'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Foo', 'Foo', 'Bar', 'Bar'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Baz', 'Foo', 'Foo', 'Bar', 'Baz'): {'A': 'Math', 'B': 'Phys', 'C': 'Phil', 'D': 'Engg'},
    ('Baz', 'Foo', 'Foo', 'Baz', 'Foo'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Foo', 'Foo', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Baz', 'Foo', 'Foo', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Phil', 'D': 'Engg'},
    ('Baz', 'Foo', 'Bar', 'Foo', 'Foo'): {'A': 'Phil', 'B': 'Engg', 'C': 'Phys', 'D': 'Math'},
    ('Baz', 'Foo', 'Bar', 'Foo', 'Bar'): {'A': 'Phil', 'B': 'Engg', 'C': 'Math', 'D': 'Phys'},
    ('Baz', 'Foo', 'Bar', 'Bar', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Foo', 'Bar', 'Bar', 'Bar'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Foo', 'Bar', 'Bar', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Foo', 'Bar', 'Baz', 'Bar'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Foo', 'Bar', 'Baz', 'Baz'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Foo', 'Baz', 'Foo', 'Foo'): {'A': 'Phys', 'B': 'Engg', 'C': 'Math', 'D': 'Phil'},
    ('Baz', 'Foo', 'Baz', 'Foo', 'Baz'): {'A': 'Math', 'B': 'Engg', 'C': 'Phys', 'D': 'Phil'},
    ('Baz', 'Foo', 'Baz', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Foo', 'Baz', 'Bar', 'Baz'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Foo', 'Baz', 'Baz', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Foo', 'Baz', 'Baz', 'Bar'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Foo', 'Baz', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Bar', 'Foo', 'Foo', 'Foo'): {'A': 'Phys', 'B': 'Engg', 'C': 'Phil', 'D': 'Math'},
    ('Baz', 'Bar', 'Foo', 'Foo', 'Baz'): {'A': 'Math', 'B': 'Phys', 'C': 'Phil', 'D': 'Engg'},
    ('Baz', 'Bar', 'Foo', 'Bar', 'Foo'): {'A': 'Math', 'B': 'Engg', 'C': 'Phys', 'D': 'Phil'},
    ('Baz', 'Bar', 'Foo', 'Bar', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Bar', 'Foo', 'Bar', 'Baz'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Bar', 'Foo', 'Baz', 'Foo'): {'A': 'Phil', 'B': 'Math', 'C': 'Phys', 'D': 'Engg'},
    ('Baz', 'Bar', 'Foo', 'Baz', 'Bar'): {'A': 'Phil', 'B': 'Phys', 'C': 'Math', 'D': 'Engg'},
    ('Baz', 'Bar', 'Foo', 'Baz', 'Baz'): {'A': 'Phys', 'B': 'Phil', 'C': 'Math', 'D': 'Engg'},
    ('Baz', 'Bar', 'Bar', 'Foo', 'Foo'): {'A': 'Math', 'B': 'Engg', 'C': 'Phys', 'D': 'Phil'},
    ('Baz', 'Bar', 'Bar', 'Foo', 'Bar'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Bar', 'Bar', 'Foo', 'Baz'): {'A': 'Phys', 'B': 'Engg', 'C': 'Phil', 'D': 'Math'},
    ('Baz', 'Bar', 'Bar', 'Baz', 'Foo'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Baz', 'Bar', 'Bar', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Baz', 'Bar', 'Baz', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Baz', 'Bar', 'Baz', 'Foo', 'Bar'): {'A': 'Phys', 'B': 'Engg', 'C': 'Phil', 'D': 'Math'},
    ('Baz', 'Bar', 'Baz', 'Foo', 'Baz'): {'A': 'Math', 'B': 'Engg', 'C': 'Phys', 'D': 'Phil'},
    ('Baz', 'Bar', 'Baz', 'Bar', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Baz', 'Bar', 'Baz', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Bar', 'Baz', 'Baz', 'Foo'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Baz', 'Bar', 'Baz', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Baz', 'Baz', 'Foo', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phys', 'C': 'Phil', 'D': 'Math'},
    ('Baz', 'Baz', 'Foo', 'Foo', 'Bar'): {'A': 'Engg', 'B': 'Math', 'C': 'Phil', 'D': 'Phys'},
    ('Baz', 'Baz', 'Foo', 'Bar', 'Foo'): {'A': 'Phil', 'B': 'Phys', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Baz', 'Foo', 'Bar', 'Bar'): {'A': 'Phys', 'B': 'Phil', 'C': 'Engg', 'D': 'Math'},
    ('Baz', 'Baz', 'Foo', 'Bar', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Baz', 'Baz', 'Foo', 'Baz', 'Bar'): {'A': 'Math', 'B': 'Phil', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Baz', 'Foo', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Baz', 'Baz', 'Bar', 'Foo', 'Foo'): {'A': 'Math', 'B': 'Phil', 'C': 'Phys', 'D': 'Engg'},
    ('Baz', 'Baz', 'Bar', 'Foo', 'Baz'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Baz', 'Bar', 'Baz', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'},
    ('Baz', 'Baz', 'Bar', 'Baz', 'Bar'): {'A': 'Phil', 'B': 'Math', 'C': 'Engg', 'D': 'Phys'},
    ('Baz', 'Baz', 'Bar', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Baz', 'Baz', 'Baz', 'Foo', 'Foo'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Baz', 'Baz', 'Foo', 'Baz'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Baz', 'Baz', 'Baz', 'Baz', 'Foo'): {'A': 'Phys', 'B': 'Math', 'C': 'Engg', 'D': 'Phil'},
    ('Baz', 'Baz', 'Baz', 'Baz', 'Bar'): {'A': 'Engg', 'B': 'Phys', 'C': 'Math', 'D': 'Phil'},
    ('Baz', 'Baz', 'Baz', 'Baz', 'Baz'): {'A': 'Engg', 'B': 'Math', 'C': 'Phys', 'D': 'Phil'},
    ('Foo', 'Foo', 'Foo', 'Foo'): {'A': 'Engg', 'B': 'Phil', 'C': 'Phys', 'D': 'Math'},
    ('Foo', 'Foo', 'Foo', 'Baz'): {'A': 'Engg', 'B': 'Phil', 'C': 'Math', 'D': 'Phys'}
}


class Strategy(Hard):
    question_limit = 5

    def solve(self):
        history = []
        while isinstance(rules[tuple(history)], str):
            question = rules[tuple(history)]
            question = people[question[0]].ask(Expr(question[3:-1]))
            history.append(str(self.get_response(question)).capitalize())

        solved = rules[tuple(history)]
        for person, field in solved.items():
            self.guess[people[person]] = fields[field]
